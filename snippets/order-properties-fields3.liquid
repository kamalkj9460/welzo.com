{% if product.metafields.accentuate.popup_question_field %}
  {%- for popup_question_field in product.metafields.accentuate.popup_question_field -%}
    <div class="popup-question__item">
      {% if product.metafields.accentuate.popup_question_title[forloop.index0] and product.metafields.accentuate.popup_question_title[forloop.index0] != blank %}<span class="popup-question__item-title">{{product.metafields.accentuate.popup_question_title[forloop.index0] }}</span>{% endif %}
      {% if product.metafields.accentuate.popup_question_text[forloop.index0] and product.metafields.accentuate.popup_question_text[forloop.index0] != blank %}
        <div class="popup-question__item-text">{{product.metafields.accentuate.popup_question_text[forloop.index0]}}</div>
      {% endif %}

      {% if popup_question_field %}
        <div class="popup-question__item-input-holder">
          {% assign inputParamCount = popup_question_field | split: "-----field-----" %}

          {% assign inputParam = inputParamCount[0] | split: "|" %}
          {% case inputParam[0] %}
            {% when "checkbox" %}
              <div class="popup-question__item-input-box ">
                {% assign forLoopIndex = forloop.index0 %}
                {% assign inputParamItems = inputParam[1] | split: ":" %}
                <div class="popup-question__item-input popup-question__item-input-checkbox">
                  {% for inputParamItem in inputParamItems %}
                    <div class="popup-question__item-input-item">
                      <input
                              type="checkbox"
                              name="properties[popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}]"
                              id="popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}"
                              value="{{ inputParamItem }}"
                              autocomplete="off">
                      <label for="popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}">
                        {{ inputParamItem }}
                      </label>
                    </div>
                  {% endfor %}
                </div>

                {% if product.metafields.accentuate.popup_question_text_for_wrong_answer[forloop.index0] != blank %}
                  <div id="popup-question__item-error-{{ forloop.index0 }}" class="popup-question__item-error">{{product.metafields.accentuate.popup_question_text_for_wrong_answer[forloop.index0] }}</div>
                {% endif %}
              </div>

            {% when "date" %}
              <div class="popup-question__item-input-box">
                <div class="popup-question__item-input-item popup-question__item-input-date-box">
                  <input
                          type="text"
                          required
                          class="popup-question__item-input-date"
                          name="properties[popup_question_field-{{ forloop.index0 }}]"
                          id="popup_question_field-{{ forloop.index0 }}"
                          autocomplete="off"
                          placeholder="dd-mm-yyyy"
                          maxlength="10">
                </div>
                {% if product.metafields.accentuate.popup_question_text_for_wrong_answer[forloop.index0] != blank %}
                  <div id="popup-question__item-error-{{ forloop.index0 }}" class="popup-question__item-error">{{product.metafields.accentuate.popup_question_text_for_wrong_answer[forloop.index0] }}</div>
                {% else %}
                  <div id="popup-question__item-error-{{ forloop.index0 }}" class="popup-question__item-error">You need to enter date in correct format and be older than 18 years old</div>
                {% endif %}
              </div>

            {% when "radio" %}
              <div class="{% if inputParamCount[1] and inputParamCount[1] != '' %}popup-question__item-input-box popup-question__item-input-box-double-field{% else %}popup-question__item-input-box{% endif %} {% if product.metafields.accentuate.popup_question_text_for_wrong_answer[forloop.index0] == blank %}question__item-without-wrong-answer{% endif %}">
                {% assign forLoopIndex = forloop.index0 %}
                {% assign inputParamItems = inputParam[1] | split: ":" %}
                {% assign radAdditionalField = '' %}
                {% if product.metafields.accentuate.popup_question_additional_radio_field[forloop.index0] and product.metafields.accentuate.popup_question_additional_radio_field[forloop.index0] != blank %}
                  {% assign radAdditionalField = product.metafields.accentuate.popup_question_additional_radio_field[forloop.index0] | split: "|" %}
                {% endif %}

                <div class="popup-question__item-input popup-question__item-input-radio-box">
                  {% for inputParamItem in inputParamItems %}
                    <div class="popup-question__item-input-item">
                      <input
                              type="radio"
                              class="{% if radAdditionalField[0] and radAdditionalField[0] == inputParamItem %}popup-question__item-input popup-question__item-input-radio popup-question__item-input-radio-action{% else %}popup-question__item-input popup-question__item-input-radio{% endif %}"
                              name="properties[popup_question_field-{{ forLoopIndex }}]"
                              id="popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}"
                              value="{{ inputParamItem }}"
                              autocomplete="off">
                      <label for="popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}">
                        {{ inputParamItem }}
                      </label>
                    </div>
                  {% endfor %}
                </div>
                {% if inputParamCount[1] and inputParamCount[1] != '' %}
                  <div class="popup-question__item-input-secondtextfield">
                    <input
                            type="text"
                            name="properties[popup_question_field-{{ forloop.index0 }}-second]"
                            id="popup_question_field-{{ forloop.index0 }}-second"
                            autocomplete="off"
                            placeholder="{{ inputParamCount[1] }}">
                    <div id="popup-question__item-input-secondtextfield-info-{{ forloop.index0 }}" class="popup-question__item-input-secondtextfield-info"></div>
                  </div>
                {% endif %}

                {% if radAdditionalField[1] and radAdditionalField[1] != blank %}
                  <div class="popup-question__item-input-radAddField">
                    <input
                            type="text"
                            class="popup-question__item-input-radio-radAddField"
                            name="properties[popup_question_field-radAddField-{{ forloop.index0 }}]"
                            id="popup_question_field-radAddField-{{ forloop.index0 }}"
                            placeholder="{{ radAdditionalField[1] }}"
                            autocomplete="off">
                  </div>
                {% endif %}

                {% if product.metafields.accentuate.popup_question_text_for_wrong_answer[forloop.index0] != blank %}
                  <div id="popup-question__item-error-{{ forloop.index0 }}" class="popup-question__item-error">{{product.metafields.accentuate.popup_question_text_for_wrong_answer[forloop.index0] }}</div>
                {% else %}
                  <div id="popup-question__item-error-{{ forloop.index0 }}" class="popup-question__item-error">Please complete all the fields to proceed to checkout </div>
                {% endif %}
              </div>

            {% else %}
              <div class="popup-question__item-input-box {% if product.metafields.accentuate.popup_question_text_for_wrong_answer[forloop.index0] == blank %}question__item-without-wrong-answer{% endif %}">
                <div class="popup-question__item-input-item popup-question__item-input-text-box">
                  <input
                          type="text"
                          class="popup-question__item-input popup-question__item-input-text"
                          name="properties[popup_question_field-{{ forloop.index0 }}]"
                          id="popup_question_field-{{ forloop.index0 }}"
                          autocomplete="off"
                          placeholder="{{ inputParam[0] }}">
                </div>
                {% if product.metafields.accentuate.popup_question_text_for_wrong_answer[forloop.index0] != blank %}
                  <div id="popup-question__item-error-{{ forloop.index0 }}" class="popup-question__item-error">{{product.metafields.accentuate.popup_question_text_for_wrong_answer[forloop.index0] }}</div>
                {% else %}
                  <div id="popup-question__item-error-{{ forloop.index0 }}" class="popup-question__item-error">Please complete all the fields to proceed to checkout </div>
                {% endif %}
              </div>
          {% endcase %}
        </div>
      {% endif %}

    </div>
  {% endfor %}
{% endif %}

<div class="error-message-fields popup-question__item-error-all">{{ 'products.product.product_popup_error' | t }}</div>



<script>
  window.addEventListener('DOMContentLoaded', function() {

    {% if product.metafields.accentuate.popup_question_field %}
    {%- for popup_question_field in product.metafields.accentuate.popup_question_field -%}
    {% if popup_question_field %}
    {% assign inputParamCount = popup_question_field | split: "-----field-----" %}
    {% assign inputParam = inputParamCount[0] | split: "|" %}
    {% case inputParam[0] %}
    {% when "checkbox" %}
    {% assign forLoopIndex = forloop.index0 %}
    {% assign inputParamItems = inputParam[1] | split: ":" %}
    {% for inputParamItem in inputParamItems %}
    var cookieIntArrayEl{{ forLoopIndex }} = document.cookie.match(new RegExp('(^| ){{ product.id }}_popupField{{ forLoopIndex }}{{ forloop.index0 }}=([^;]+)'));
    if (cookieIntArrayEl{{ forLoopIndex }}) {
      let cookieIntArray{{ forLoopIndex }} ='';
      cookieIntArray{{ forLoopIndex }} = cookieIntArrayEl{{ forLoopIndex }}[2].split("---popInptVal---");

      if (document.getElementById(cookieIntArray{{ forLoopIndex }}[0])) {
        if (cookieIntArray{{ forLoopIndex }} && cookieIntArray{{ forLoopIndex }}[1] != 'nochecked' && cookieIntArray{{ forLoopIndex }}[1] != '') {
          document.getElementById(cookieIntArray{{ forLoopIndex }}[0]).checked = true;
        } else {
          document.getElementById(cookieIntArray{{ forLoopIndex }}[0]).checked = false;
        }
      }
    }
    {% endfor %}

    {% when "date" %}
    var cookieIntArrayEl{{ forLoopIndex }} = document.cookie.match(new RegExp('(^| ){{ product.id }}_popupField{{ forloop.index0 }}=([^;]+)'));
    if (cookieIntArrayEl{{ forLoopIndex }}) {
      let cookieIntArray{{ forLoopIndex }} ='';
      cookieIntArray{{ forLoopIndex }} = cookieIntArrayEl{{ forLoopIndex }}[2].split("---popInptVal---");

      if (document.getElementById(cookieIntArray{{ forLoopIndex }}[0])) {
        if (cookieIntArray{{ forLoopIndex }} && cookieIntArray{{ forLoopIndex }}[1] != '' && cookieIntArray{{ forLoopIndex }}[1] != 'empty') {
          document.getElementById(cookieIntArray{{ forLoopIndex }}[0]).value = cookieIntArray{{ forLoopIndex }}[1];
        } else {
          document.getElementById(cookieIntArray{{ forLoopIndex }}[0]).value = '';
        }
      }
    }

    {% when "radio" %}
    {% assign forLoopIndex = forloop.index0 %}

    var cookieIntArrayEl{{ forLoopIndex }} = document.cookie.match(new RegExp('(^| ){{ product.id }}_popupField{{ forLoopIndex }}=([^;]+)'));
    if (cookieIntArrayEl{{ forLoopIndex }}) {
      let cookieIntArray{{ forLoopIndex }} ='';
      cookieIntArray{{ forLoopIndex }} = cookieIntArrayEl{{ forLoopIndex }}[2].split("---popInptVal---");

      if (document.getElementById(cookieIntArray{{ forLoopIndex }}[0])) {
        if (cookieIntArray{{ forLoopIndex }} && cookieIntArray{{ forLoopIndex }}[1] != 'nochecked' && cookieIntArray{{ forLoopIndex }}[1] != '') {
          document.getElementById(cookieIntArray{{ forLoopIndex }}[0]).checked = true;
        } else {
          document.getElementById(cookieIntArray{{ forLoopIndex }}[0]).checked = false;
        }
      }
    }

    var cookieIntArrayEl2{{ forLoopIndex }} = document.cookie.match(new RegExp('(^| ){{ product.id }}_popupField{{ forLoopIndex }}-second=([^;]+)'));
    if (cookieIntArrayEl2{{ forLoopIndex }}) {
      let cookieIntArray2{{ forLoopIndex }} ='';
      cookieIntArray2{{ forLoopIndex }} = cookieIntArrayEl2{{ forLoopIndex }}[2].split("---popInptVal---");

      if (document.getElementById(cookieIntArray2{{ forLoopIndex }}[0])) {
        if (cookieIntArray2{{ forLoopIndex }} && cookieIntArray2{{ forLoopIndex }}[1] != '' && cookieIntArray2{{ forLoopIndex }}[1] != 'empty') {
          document.getElementById(cookieIntArray2{{ forLoopIndex }}[0]).value = cookieIntArray2{{ forLoopIndex }}[1];
        } else {
          document.getElementById(cookieIntArray2{{ forLoopIndex }}[0]).value = '';
        }
      }
    }

    {% if product.metafields.accentuate.popup_question_additional_radio_field[forLoopIndex] and product.metafields.accentuate.popup_question_additional_radio_field[forLoopIndex] != blank %}
    var cookieIntArrayEl3{{ forLoopIndex }} = document.cookie.match(new RegExp('(^| ){{ product.id }}_popupField{{ forLoopIndex }}-radAddField=([^;]+)'));
    if (cookieIntArrayEl3{{ forLoopIndex }}) {
      let cookieIntArray3{{ forLoopIndex }} ='';
      cookieIntArray3{{ forLoopIndex }} = cookieIntArrayEl3{{ forLoopIndex }}[2].split("---popInptVal---");

      if (document.getElementById(cookieIntArray3{{ forLoopIndex }}[0])) {
        if (cookieIntArray3{{ forLoopIndex }} && cookieIntArray3{{ forLoopIndex }}[1] != '' && cookieIntArray3{{ forLoopIndex }}[1] != 'empty') {
          document.getElementById(cookieIntArray3{{ forLoopIndex }}[0]).value = cookieIntArray3{{ forLoopIndex }}[1];
        } else {
          document.getElementById(cookieIntArray3{{ forLoopIndex }}[0]).value = '';
        }
      }
    }
    {% endif %}

    {% else %}
    var cookieIntArrayEl{{ forLoopIndex }} = document.cookie.match(new RegExp('(^| ){{ product.id }}_popupField{{ forloop.index0 }}=([^;]+)'));
    if (cookieIntArrayEl{{ forLoopIndex }}) {
      let cookieIntArray{{ forLoopIndex }} ='';
      cookieIntArray{{ forLoopIndex }} = cookieIntArrayEl{{ forLoopIndex }}[2].split("---popInptVal---");

      if (document.getElementById(cookieIntArray{{ forLoopIndex }}[0])) {
        if (cookieIntArray{{ forLoopIndex }} && cookieIntArray{{ forLoopIndex }}[1] != '' && cookieIntArray{{ forLoopIndex }}[1] != 'empty') {
          document.getElementById(cookieIntArray{{ forLoopIndex }}[0]).value = cookieIntArray{{ forLoopIndex }}[1];
        } else {
          document.getElementById(cookieIntArray{{ forLoopIndex }}[0]).value = '';
        }
      }
    }

    {% endcase %}

    {% endif %}

    {% endfor %}
    {% endif %}

    {% if product.metafields.accentuate.popup_question_text_for_wrong_answer %}
    {% assign conditionAND = '' %}
    {% assign conditionNotOR = '' %}
    {% assign errorIdList = '' %}
    {%- for popup_question_text_for_wrong_answer in product.metafields.accentuate.popup_question_text_for_wrong_answer -%}
    {% if popup_question_text_for_wrong_answer != blank %}
    {% assign inputParamCount = product.metafields.accentuate.popup_question_field[forloop.index0] | split: "-----field-----" %}
    {% assign inputParam = inputParamCount[0] | split: "|" %}

    {% case inputParam[0] %}
    {% when "checkbox" %}
    {% assign forLoopIndex = forloop.index0 %}
    {% assign inputParamItems = inputParam[1] | split: ":" %}
    let checkboxGetValue{{forLoopIndex}} = '';
    let checkboxGetValueErrorMsg{{forLoopIndex}} = "{{ popup_question_text_for_wrong_answer }}";
    {% for inputParamItem in inputParamItems %}
    if (document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").checked) {
      if (checkboxGetValue{{forLoopIndex}} != '') {
        checkboxGetValue{{forLoopIndex}} = checkboxGetValue{{forLoopIndex}}+', '+document.querySelector('#popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}').value;
      } else {
        checkboxGetValue{{forLoopIndex}} = document.querySelector('#popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}').value;
      }
    }
    {% endfor %}
    let isCheckboxGetValue{{forLoopIndex}} = !!checkboxGetValue{{forLoopIndex}};

    {% if conditionAND != '' %}
    {% capture conditionAND %}{{ conditionAND }} && isCheckboxGetValue{{forLoopIndex}}{% endcapture %}
    {% else %}
    {% capture conditionAND %}isCheckboxGetValue{{forLoopIndex}}{% endcapture %}
    {% endif %}

    {% if conditionNotOR != '' %}
    {% capture conditionNotOR %}{{ conditionNotOR }} || !isCheckboxGetValue{{forLoopIndex}}{% endcapture %}
    {% else %}
    {% capture conditionNotOR %}!isCheckboxGetValue{{forLoopIndex}}{% endcapture %}
            {% endif %}

            {% if errorIdList != '' %}
    {% capture errorIdList %}{{ errorIdList }},popup-question__item-error-{{ forLoopIndex }}{% endcapture %}
    {% else %}
    {% capture errorIdList %}popup-question__item-error-{{ forLoopIndex }}{% endcapture %}
    {% endif %}

    {% when "date" %}
    let dateGetValueErrorMsg{{ forloop.index0 }} = "{{ popup_question_text_for_wrong_answer }}";
    let dateGetValue{{ forloop.index0 }} = document.querySelector('#popup_question_field-{{ forloop.index0 }}');
    let isDateGetValue{{ forloop.index0 }} = !!dateGetValue{{ forloop.index0 }}.value;

    {% if conditionAND != '' %}
    {% capture conditionAND %}{{ conditionAND }} && isDateGetValue{{ forloop.index0 }}{% endcapture %}
    {% else %}
    {% capture conditionAND %}isDateGetValue{{ forloop.index0 }}{% endcapture %}
    {% endif %}

    {% if conditionNotOR != '' %}
    {% capture conditionNotOR %}{{ conditionNotOR }} || !isDateGetValue{{ forloop.index0 }}{% endcapture %}
    {% else %}
    {% capture conditionNotOR %}!isDateGetValue{{ forloop.index0 }}{% endcapture %}
            {% endif %}

            {% if errorIdList != '' %}
    {% capture errorIdList %}{{ errorIdList }},popup-question__item-error-{{ forloop.index0 }}{% endcapture %}
    {% else %}
    {% capture errorIdList %}popup-question__item-error-{{ forloop.index0 }}{% endcapture %}
    {% endif %}

    {% when "radio" %}
    {% assign forLoopIndex = forloop.index0 %}
    {% assign inputParamItems = inputParam[1] | split: ":" %}
    let radioGetValue{{forLoopIndex}} = '';
    let radioGetValueErrorMsg{{ forloop.index0 }} = "{{ popup_question_text_for_wrong_answer }}";

    {% assign radAdditionalField = '' %}
    {% if product.metafields.accentuate.popup_question_additional_radio_field[forLoopIndex] and product.metafields.accentuate.popup_question_additional_radio_field[forLoopIndex] != blank %}
    {% assign radAdditionalField = product.metafields.accentuate.popup_question_additional_radio_field[forLoopIndex] | split: "|" %}
    let inpPopup_question_additional_radio_field{{ forLoopIndex }} = document.querySelector('#popup_question_field-radAddField-{{ forLoopIndex }}');
    let isRadioGetTextValueAdditionalInpt{{forLoopIndex}} = !!inpPopup_question_additional_radio_field{{ forLoopIndex }}.value;
    {% endif %}

    {% if inputParamCount[1] and inputParamCount[1] != '' %}
    let popup_question_field{{ forloop.index0 }}second = document.querySelector('#popup_question_field-{{ forloop.index0 }}-second');
    let isRadioGetTextValue{{forLoopIndex}} = !!popup_question_field{{ forloop.index0 }}second.value;
    if(isRadioGetTextValue{{forLoopIndex}}) {

      {% for inputParamItem in inputParamItems %}
      if (document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").checked) {
        {% if inputParam[2] and inputParam[2] != '' %}
        if (document.querySelector('#popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}').value == "{{ inputParam[2] }}") {
          {% if radAdditionalField[0] and radAdditionalField[0] != '' %}
          if (isRadioGetTextValueAdditionalInpt{{forLoopIndex}} && document.querySelector('#popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}').value == "{{ radAdditionalField[0] }}") {
            if (radioGetValue{{forLoopIndex}} != '') {
              radioGetValue{{forLoopIndex}} = radioGetValue{{forLoopIndex}}+', '+document.querySelector('#popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}').value;
            } else {
              radioGetValue{{forLoopIndex}} = document.querySelector('#popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}').value;
            }
          }
          {% else %}
          if (radioGetValue{{forLoopIndex}} != '') {
            radioGetValue{{forLoopIndex}} = radioGetValue{{forLoopIndex}}+', '+document.querySelector('#popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}').value;
          } else {
            radioGetValue{{forLoopIndex}} = document.querySelector('#popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}').value;
          }
          {% endif %}
        }
        {% else %}
        {% if radAdditionalField[0] and radAdditionalField[0] != '' %}
        if (isRadioGetTextValueAdditionalInpt{{forLoopIndex}} && document.querySelector('#popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}').value == "{{ radAdditionalField[0] }}") {
          if (radioGetValue{{forLoopIndex}} != '') {
            radioGetValue{{forLoopIndex}} = radioGetValue{{forLoopIndex}}+', '+document.querySelector('#popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}').value;
          } else {
            radioGetValue{{forLoopIndex}} = document.querySelector('#popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}').value;
          }
        }
        {% else %}
        if (radioGetValue{{forLoopIndex}} != '') {
          radioGetValue{{forLoopIndex}} = radioGetValue{{forLoopIndex}}+', '+document.querySelector('#popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}').value;
        } else {
          radioGetValue{{forLoopIndex}} = document.querySelector('#popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}').value;
        }
        {% endif %}
        {% endif %}
      }
      {% endfor %}
    }
    {% else %}
    {% for inputParamItem in inputParamItems %}
    if (document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").checked) {
      {% if inputParam[2] and inputParam[2] != '' %}
      if (document.querySelector('#popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}').value == "{{ inputParam[2] }}") {
        {% if radAdditionalField[0] and radAdditionalField[0] != '' %}
        if (isRadioGetTextValueAdditionalInpt{{forLoopIndex}} && document.querySelector('#popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}').value == "{{ radAdditionalField[0] }}") {
          if (radioGetValue{{forLoopIndex}} != '') {
            radioGetValue{{forLoopIndex}} = radioGetValue{{forLoopIndex}}+', '+document.querySelector('#popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}').value;
          } else {
            radioGetValue{{forLoopIndex}} = document.querySelector('#popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}').value;
          }
        }
        {% else %}
        if (radioGetValue{{forLoopIndex}} != '') {
          radioGetValue{{forLoopIndex}} = radioGetValue{{forLoopIndex}}+', '+document.querySelector('#popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}').value;
        } else {
          radioGetValue{{forLoopIndex}} = document.querySelector('#popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}').value;
        }
        {% endif %}
      }
      {% else %}
      {% if radAdditionalField[0] and radAdditionalField[0] != '' %}
      if (isRadioGetTextValueAdditionalInpt{{forLoopIndex}} && document.querySelector('#popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}').value == "{{ radAdditionalField[0] }}") {
        if (radioGetValue{{forLoopIndex}} != '') {
          radioGetValue{{forLoopIndex}} = radioGetValue{{forLoopIndex}}+', '+document.querySelector('#popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}').value;
        } else {
          radioGetValue{{forLoopIndex}} = document.querySelector('#popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}').value;
        }
      }
      {% else %}
      if (radioGetValue{{forLoopIndex}} != '') {
        radioGetValue{{forLoopIndex}} = radioGetValue{{forLoopIndex}}+', '+document.querySelector('#popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}').value;
      } else {
        radioGetValue{{forLoopIndex}} = document.querySelector('#popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}').value;
      }
      {% endif %}
      {% endif %}
    }
    {% endfor %}
    {% endif %}

    let isRadioGetValue{{forLoopIndex}} = !!radioGetValue{{forLoopIndex}};

    {% if conditionAND != '' %}
    {% capture conditionAND %}{{ conditionAND }} && isRadioGetValue{{forLoopIndex}}{% endcapture %}
    {% else %}
    {% capture conditionAND %}isRadioGetValue{{forLoopIndex}}{% endcapture %}
    {% endif %}

    {% if conditionNotOR != '' %}
    {% capture conditionNotOR %}{{ conditionNotOR }} || !isRadioGetValue{{forLoopIndex}}{% endcapture %}
    {% else %}
    {% capture conditionNotOR %}!isRadioGetValue{{forLoopIndex}}{% endcapture %}
            {% endif %}

            {% if errorIdList != '' %}
    {% capture errorIdList %}{{ errorIdList }},popup-question__item-error-{{ forLoopIndex }}{% endcapture %}
    {% else %}
    {% capture errorIdList %}popup-question__item-error-{{ forLoopIndex }}{% endcapture %}
    {% endif %}

    {% else %}
    let textGetValueErrorMsg{{ forloop.index0 }} = "{{ popup_question_text_for_wrong_answer }}";
    let textGetValue{{ forloop.index0 }} = document.querySelector('#popup_question_field-{{ forloop.index0 }}');
    let isTextGetValue{{ forloop.index0 }} = !!textGetValue{{ forloop.index0 }}.value;

    {% if conditionAND != '' %}
    {% capture conditionAND %}{{ conditionAND }} && isTextGetValue{{ forloop.index0 }}{% endcapture %}
    {% else %}
    {% capture conditionAND %}isTextGetValue{{ forloop.index0 }}{% endcapture %}
    {% endif %}

    {% if conditionNotOR != '' %}
    {% capture conditionNotOR %}{{ conditionNotOR }} || !isTextGetValue{{ forloop.index0 }}{% endcapture %}
    {% else %}
    {% capture conditionNotOR %}!isTextGetValue{{ forloop.index0 }}{% endcapture %}
            {% endif %}

            {% if errorIdList != '' %}
    {% capture errorIdList %}{{ errorIdList }},popup-question__item-error-{{ forloop.index0 }}{% endcapture %}
    {% else %}
    {% capture errorIdList %}popup-question__item-error-{{ forloop.index0 }}{% endcapture %}
    {% endif %}

    {% endcase %}
    {% else %}

    {% endif %}
    {% endfor %}
    {% endif %}

    const buttonModalSend = document.querySelector('.modal-fields__button');
    const modalFieldsContent = document.querySelector('.modal-fields__content');
    const modalFieldsWrap = document.querySelector('.modal-fields__wrap');
    const errorMessageFields = document.querySelector('.error-message-fields');
    const errorMessageFieldsAll = document.querySelector('.popup-question__item-error-all');
    let isClick = false;

    const onButtonDisabled = () => {

      if ({{ conditionAND }}) {
        buttonModalSend.disabled = false;
      } else {
        buttonModalSend.disabled = true;
      };
    };

    const onErrorMessage = () => {
      if ({{ conditionAND }}) {
        errorMessageFields.style.display = 'none';
      } else {
        errorMessageFields.style.display = 'block';
      };

      // Check Field Without Wrong Answer

      {% if product.metafields.accentuate.popup_question_text_for_wrong_answer %}
      {% if conditionNotOR and conditionNotOR != '' %}
      {% if errorIdList and errorIdList != '' %}
      {% assign conditionNotORItems = conditionNotOR | split: " || " %}
      {% assign errorIdListItem = errorIdList | split: "," %}
      {% for conditionNotORItem in conditionNotORItems %}
      if ({{conditionNotORItem}}) {
        document.querySelector('#{{ errorIdListItem[forloop.index0] }}').style.display = 'block';
      } else {
        document.querySelector('#{{ errorIdListItem[forloop.index0] }}').style.display = 'none';
      }
      {% endfor %}
      {% endif %}
      {% endif %}
      {% endif %}
    };

    buttonModalSend.addEventListener('click', () => {
      if ({{ conditionNotOR }}) {
        modalFields.setAttribute('open', 'open');
      }
      isClick = true;
      onButtonDisabled();
      onErrorMessage();
    });

    {% if product.metafields.accentuate.popup_question_field %}
    {%- for popup_question_field in product.metafields.accentuate.popup_question_field -%}
    {% assign inputParamCount = popup_question_field | split: "-----field-----" %}
    {% assign inputParam = inputParamCount[0] | split: "|" %}
    {% case inputParam[0] %}
    {% when "checkbox" %}
    {% assign forLoopIndex = forloop.index0 %}
    {% assign inputParamItems = inputParam[1] | split: ":" %}
    {% assign inputIdItems = '' %}
    {% for inputParamItem in inputParamItems %}
    {% if inputIdItems != '' %}
    {% capture inputIdItems %}{{ inputIdItems }} || document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").checked{% endcapture %}
    {% else %}
    {% capture inputIdItems %}document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").checked{% endcapture %}
    {% endif %}
    {% endfor %}

    {% for inputParamItem in inputParamItems %}
    document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").addEventListener('input', (e) => {

      {% if product.metafields.accentuate.popup_question_text_for_wrong_answer[forLoopIndex] != blank %}
      if ({{inputIdItems}}) {
        isCheckboxGetValue{{forLoopIndex}} = true;
      } else {
        isCheckboxGetValue{{forLoopIndex}} = false;
      }

      if (isClick) {
        onButtonDisabled();
        onErrorMessage();
      } else {
        if (!isCheckboxGetValue{{forLoopIndex}}) {
          document.querySelector('#popup-question__item-error-{{forLoopIndex}}').style.display = 'block';
        } else {
          document.querySelector('#popup-question__item-error-{{forLoopIndex}}').style.display = 'none';
        }
      }
      {% endif %}

      if(document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").checked){
        document.cookie = "{{ product.id }}_popupField{{ forLoopIndex }}{{ forloop.index0 }}=popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}---popInptVal---checked; max-age=86400";
      } else {
        document.cookie = "{{ product.id }}_popupField{{ forLoopIndex }}{{ forloop.index0 }}=popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}---popInptVal---nochecked; max-age=86400";
      }
    });
    {% endfor %}

    {% when "date" %}
    document.querySelector('#popup_question_field-{{ forloop.index0 }}').addEventListener('input', (e) => {
      {% if product.metafields.accentuate.popup_question_text_for_wrong_answer[forloop.index0] != blank %}
      isDateGetValue{{ forloop.index0 }} = !!e.target.value;

      if (isClick) {
        onButtonDisabled();
        onErrorMessage();
      } else {
        if (!isDateGetValue{{forloop.index0}}) {
          document.querySelector('#popup-question__item-error-{{forloop.index0}}').style.display = 'block';
        } else {
          document.querySelector('#popup-question__item-error-{{forloop.index0}}').style.display = 'none';
        }
      }
      {% endif %}

      if(document.querySelector('#popup_question_field-{{ forloop.index0 }}') && document.querySelector('#popup_question_field-{{ forloop.index0 }}').value != '' ){
        document.cookie = "{{ product.id }}_popupField{{ forloop.index0 }}=popup_question_field-{{ forloop.index0 }}---popInptVal---"+document.querySelector('#popup_question_field-{{ forloop.index0 }}').value+"; max-age=86400";
      } else {
        document.cookie = "{{ product.id }}_popupField{{ forloop.index0 }}=popup_question_field-{{ forloop.index0 }}---popInptVal---empty; max-age=86400";
      }
    });

    {% when "radio" %}
    /// start radio
    {% assign forLoopIndex = forloop.index0 %}
    {% assign inputParamItems = inputParam[1] | split: ":" %}

    {% assign inputIdItems = '' %}
    {% for inputParamItem in inputParamItems %}
    {% if inputIdItems != '' %}
    {% capture inputIdItems %}{{ inputIdItems }} || document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").checked{% endcapture %}
    {% else %}
    {% capture inputIdItems %}document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").checked{% endcapture %}
    {% endif %}
    {% endfor %}

    {% assign radAdditionalField = '' %}
    {% if product.metafields.accentuate.popup_question_additional_radio_field[forLoopIndex] and product.metafields.accentuate.popup_question_additional_radio_field[forLoopIndex] != blank %}
    {% assign radAdditionalField = product.metafields.accentuate.popup_question_additional_radio_field[forLoopIndex] | split: "|" %}
    let popup_question_additional_radio_field{{ forLoopIndex }} = document.querySelector('#popup_question_field-radAddField-{{ forLoopIndex }}');
    let isRadioGetTextValueAdditional{{forLoopIndex}} = !!popup_question_additional_radio_field{{ forLoopIndex }}.value;
    let popup_question_additional_second{{ forLoopIndex }} = '';
    let isRadioGetTextValueSecond{{forLoopIndex}} = '';
    {% endif %}

    {% if inputParamCount[1] and inputParamCount[1] != '' %}
    //if second field exist start
    {% for inputParamItem in inputParamItems %}
    document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").addEventListener('input', (e) => {
      document.querySelector('#popup-question__item-input-secondtextfield-info-{{ forLoopIndex }}').innerHTML = e.target.value;

      {% if radAdditionalField[0] and radAdditionalField[0] != '' %}
      let parentAddField{{ forLoopIndex }} = e.target.closest('.popup-question__item-input-box');
      if (e.target.value == '{{radAdditionalField[0]}}') {
        parentAddField{{ forLoopIndex }}.classList.add("additional-field-show");
      } else {
        parentAddField{{ forLoopIndex }}.classList.remove("additional-field-show");
      }
      {% endif %}

      {% if product.metafields.accentuate.popup_question_text_for_wrong_answer[forLoopIndex] != blank %}
      if ({{inputIdItems}}) {
        if(document.querySelector('#popup_question_field-{{ forLoopIndex }}-second').value) {
          {% if inputParam[2] and inputParam[2] != '' %}
          if (document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").value == '{{inputParam[2]}}') {
            {% if radAdditionalField[0] and radAdditionalField[0] != '' %}
            popup_question_additional_radio_field{{ forLoopIndex }} = document.querySelector('#popup_question_field-radAddField-{{ forLoopIndex }}');
            isRadioGetTextValueAdditional{{forLoopIndex}} = !!popup_question_additional_radio_field{{ forLoopIndex }}.value;
            if (isRadioGetTextValueAdditional{{forLoopIndex}} && document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").value == '{{radAdditionalField[0]}}') {
              isRadioGetValue{{forLoopIndex}} = true;
            } else {
              isRadioGetValue{{forLoopIndex}} = false;
            }
            {% else %}
            isRadioGetValue{{forLoopIndex}} = true;
            {% endif %}
          } else {
            isRadioGetValue{{forLoopIndex}} = false;
          }
          {% else %}
          {% if radAdditionalField[0] and radAdditionalField[0] != '' %}
          popup_question_additional_radio_field{{ forLoopIndex }} = document.querySelector('#popup_question_field-radAddField-{{ forLoopIndex }}');
          isRadioGetTextValueAdditional{{forLoopIndex}} = !!popup_question_additional_radio_field{{ forLoopIndex }}.value;
          if (isRadioGetTextValueAdditional{{forLoopIndex}} && document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").value == '{{radAdditionalField[0]}}') {
            isRadioGetValue{{forLoopIndex}} = true;
          } else {
            isRadioGetValue{{forLoopIndex}} = false;
          }
          {% else %}
          isRadioGetValue{{forLoopIndex}} = true;
          {% endif %}
          {% endif %}
        } else {
          isRadioGetValue{{forLoopIndex}} = false;
        }
      } else {
        isRadioGetValue{{forLoopIndex}} = false;
      }

      if (isClick) {
        onButtonDisabled();
        onErrorMessage();
      } else {
        if (!isRadioGetValue{{forLoopIndex}}) {
          document.querySelector('#popup-question__item-error-{{forLoopIndex}}').style.display = 'block';
        } else {
          document.querySelector('#popup-question__item-error-{{forLoopIndex}}').style.display = 'none';
        }
      }
      {% endif %}

      if(document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").checked){
        document.cookie = "{{ product.id }}_popupField{{ forLoopIndex }}=popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}---popInptVal---checked; max-age=86400";
      }
    });
    {% endfor %}

    //second field start
    document.getElementById("popup_question_field-{{ forLoopIndex }}-second").addEventListener('input', (e) => {

      {% if product.metafields.accentuate.popup_question_text_for_wrong_answer[forLoopIndex] != blank %}
      {% for inputParamItem in inputParamItems %}
      if ({{inputIdItems}}) {
        if(document.querySelector('#popup_question_field-{{ forLoopIndex }}-second').value) {
          {% if inputParam[2] and inputParam[2] != '' %}
          if (document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").value == '{{inputParam[2]}}') {
            {% if radAdditionalField[0] and radAdditionalField[0] != '' %}
            popup_question_additional_radio_field{{ forLoopIndex }} = document.querySelector('#popup_question_field-radAddField-{{ forLoopIndex }}');
            isRadioGetTextValueAdditional{{forLoopIndex}} = !!popup_question_additional_radio_field{{ forLoopIndex }}.value;
            if (isRadioGetTextValueAdditional{{forLoopIndex}} && document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").checked && document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").value == '{{radAdditionalField[0]}}') {
              isRadioGetValue{{forLoopIndex}} = true;
            }
            {% else %}
            isRadioGetValue{{forLoopIndex}} = true;
            {% endif %}
          } else {
            isRadioGetValue{{forLoopIndex}} = false;
          }
          {% else %}
          {% if radAdditionalField[0] and radAdditionalField[0] != '' %}
          popup_question_additional_radio_field{{ forLoopIndex }} = document.querySelector('#popup_question_field-radAddField-{{ forLoopIndex }}');
          isRadioGetTextValueAdditional{{forLoopIndex}} = !!popup_question_additional_radio_field{{ forLoopIndex }}.value;
          if (isRadioGetTextValueAdditional{{forLoopIndex}} && document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").checked && document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").value == '{{radAdditionalField[0]}}') {
            isRadioGetValue{{forLoopIndex}} = true;
          }
          {% else %}
          isRadioGetValue{{forLoopIndex}} = true;
          {% endif %}
          {% endif %}
        } else {
          isRadioGetValue{{forLoopIndex}} = false;
        }
      } else {
        isRadioGetValue{{forLoopIndex}} = false;
      }

      if (isClick) {
        onButtonDisabled();
        onErrorMessage();
      } else {
        if (!isRadioGetValue{{forLoopIndex}}) {
          document.querySelector('#popup-question__item-error-{{forLoopIndex}}').style.display = 'block';
        } else {
          document.querySelector('#popup-question__item-error-{{forLoopIndex}}').style.display = 'none';
        }
      }
      {% endfor %}
      {% endif %}

      if(document.getElementById("popup_question_field-{{ forLoopIndex }}-second") && document.getElementById("popup_question_field-{{ forLoopIndex }}-second").value != '' ){
        document.cookie = "{{ product.id }}_popupField{{ forLoopIndex }}-second=popup_question_field-{{ forLoopIndex }}-second---popInptVal---"+document.querySelector('#popup_question_field-{{ forLoopIndex }}-second').value+"; max-age=86400";
      } else {
        document.cookie = "{{ product.id }}_popupField{{ forLoopIndex }}-second=popup_question_field-{{ forLoopIndex }}-second---popInptVal---empty; max-age=86400";
      }
    });
    //second field end

    //additional field start
    {% if radAdditionalField[0] and radAdditionalField[0] != '' %}
    document.getElementById("popup_question_field-radAddField-{{ forLoopIndex }}").addEventListener('input', (e) => {
      {% if product.metafields.accentuate.popup_question_text_for_wrong_answer[forLoopIndex] != blank %}
      {% for inputParamItem in inputParamItems %}
      if ({{inputIdItems}}) {
        if(document.querySelector('#popup_question_field-radAddField-{{ forLoopIndex }}').value) {
          {% if inputParam[2] and inputParam[2] != '' %}
          if (document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").value == '{{inputParam[2]}}') {
            {% if radAdditionalField[0] and radAdditionalField[0] != '' %}
            popup_question_additional_second{{ forLoopIndex }} = document.querySelector('#popup_question_field-{{ forLoopIndex }}-second');
            isRadioGetTextValueSecond{{forLoopIndex}} = !!popup_question_additional_second{{ forLoopIndex }}.value;
            if (isRadioGetTextValueSecond{{forLoopIndex}} && document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").checked && document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").value == '{{radAdditionalField[0]}}') {
              isRadioGetValue{{forLoopIndex}} = true;
            }
            {% else %}
            isRadioGetValue{{forLoopIndex}} = true;
            {% endif %}
          }
          {% else %}
          {% if radAdditionalField[0] and radAdditionalField[0] != '' %}
          popup_question_additional_second{{ forLoopIndex }} = document.querySelector('#popup_question_field-{{ forLoopIndex }}-second');
          isRadioGetTextValueSecond{{forLoopIndex}} = !!popup_question_additional_second{{ forLoopIndex }}.value;
          if (isRadioGetTextValueSecond{{forLoopIndex}} && document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").checked && document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").value == '{{radAdditionalField[0]}}') {
            isRadioGetValue{{forLoopIndex}} = true;
          }
          {% else %}
          isRadioGetValue{{forLoopIndex}} = true;
          {% endif %}
          {% endif %}
        } else {
          isRadioGetValue{{forLoopIndex}} = false;
        }
      } else {
        isRadioGetValue{{forLoopIndex}} = false;
      }

      if (isClick) {
        onButtonDisabled();
        onErrorMessage();
      } else {
        if (!isRadioGetValue{{forLoopIndex}}) {
          document.querySelector('#popup-question__item-error-{{forLoopIndex}}').style.display = 'block';
        } else {
          document.querySelector('#popup-question__item-error-{{forLoopIndex}}').style.display = 'none';
        }
      }
      {% endfor %}
      {% endif %}

      if(document.getElementById("popup_question_field-radAddField-{{ forLoopIndex }}") && document.getElementById("popup_question_field-radAddField-{{ forLoopIndex }}").value != '' ){
        document.cookie = "{{ product.id }}_popupField{{ forLoopIndex }}-radAddField=popup_question_field-radAddField-{{ forLoopIndex }}---popInptVal---"+document.querySelector('#popup_question_field-radAddField-{{ forLoopIndex }}').value+"; max-age=86400";
      } else {
        document.cookie = "{{ product.id }}_popupField{{ forLoopIndex }}-radAddField=popup_question_field-radAddField-{{ forLoopIndex }}---popInptVal---empty; max-age=86400";
      }
    });
    {% endif %}
    //additional field end
    //if second field exist end
    {% else %}
    {% for inputParamItem in inputParamItems %}
    document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").addEventListener('input', (e) => {
      {% if radAdditionalField[0] and radAdditionalField[0] != '' %}
      let parentAddField{{ forLoopIndex }} = e.target.closest('.popup-question__item-input-box');
      if (e.target.value == '{{radAdditionalField[0]}}') {
        parentAddField{{ forLoopIndex }}.classList.add("additional-field-show");
      } else {
        parentAddField{{ forLoopIndex }}.classList.remove("additional-field-show");
      }
      {% endif %}

      {% if product.metafields.accentuate.popup_question_text_for_wrong_answer[forLoopIndex] != blank %}
      if ({{inputIdItems}}) {
        {% if inputParam[2] and inputParam[2] != '' %}
        if (document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").value == '{{inputParam[2]}}') {
          {% if radAdditionalField[0] and radAdditionalField[0] != '' %}
          popup_question_additional_radio_field{{ forLoopIndex }} = document.querySelector('#popup_question_field-radAddField-{{ forLoopIndex }}');
          isRadioGetTextValueAdditional{{forLoopIndex}} = !!popup_question_additional_radio_field{{ forLoopIndex }}.value;
          if (isRadioGetTextValueAdditional{{forLoopIndex}} && document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").value == '{{radAdditionalField[0]}}') {
            isRadioGetValue{{forLoopIndex}} = true;
          } else {
            isRadioGetValue{{forLoopIndex}} = false;
          }
          {% else %}
          isRadioGetValue{{forLoopIndex}} = true;
          {% endif %}
        } else {
          isRadioGetValue{{forLoopIndex}} = false;
        }
        {% else %}
        {% if radAdditionalField[0] and radAdditionalField[0] != '' %}
        popup_question_additional_radio_field{{ forLoopIndex }} = document.querySelector('#popup_question_field-radAddField-{{ forLoopIndex }}');
        isRadioGetTextValueAdditional{{forLoopIndex}} = !!popup_question_additional_radio_field{{ forLoopIndex }}.value;
        if (isRadioGetTextValueAdditional{{forLoopIndex}} && document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").value == '{{radAdditionalField[0]}}') {
          isRadioGetValue{{forLoopIndex}} = true;
        } else {
          isRadioGetValue{{forLoopIndex}} = false;
        }
        {% else %}
        isRadioGetValue{{forLoopIndex}} = true;
        {% endif %}
        {% endif %}
      } else {
        isRadioGetValue{{forLoopIndex}} = false;
      }

      if (isClick) {
        onButtonDisabled();
        onErrorMessage();
      } else {
        if (!isRadioGetValue{{forLoopIndex}}) {
          document.querySelector('#popup-question__item-error-{{forLoopIndex}}').style.display = 'block';
        } else {
          document.querySelector('#popup-question__item-error-{{forLoopIndex}}').style.display = 'none';
        }
      }
      {% endif %}

      if(document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").checked){
        document.cookie = "{{ product.id }}_popupField{{ forLoopIndex }}=popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}---popInptVal---checked; max-age=86400";
      }
    });
    {% endfor %}

    //additional field start
    {% if radAdditionalField[0] and radAdditionalField[0] != '' %}
    document.getElementById("popup_question_field-radAddField-{{ forLoopIndex }}").addEventListener('input', (e) => {
      {% if product.metafields.accentuate.popup_question_text_for_wrong_answer[forLoopIndex] != blank %}
      {% for inputParamItem in inputParamItems %}
      if ({{inputIdItems}}) {
        if(document.querySelector('#popup_question_field-radAddField-{{ forLoopIndex }}').value) {
          {% if inputParam[2] and inputParam[2] != '' %}
          if (document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").value == '{{inputParam[2]}}') {
            {% if radAdditionalField[0] and radAdditionalField[0] != '' %}
            if (document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").checked && document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").value == '{{radAdditionalField[0]}}') {
              isRadioGetValue{{forLoopIndex}} = true;
            }
            {% else %}
            isRadioGetValue{{forLoopIndex}} = true;
            {% endif %}
          }
          {% else %}
          {% if radAdditionalField[0] and radAdditionalField[0] != '' %}
          if (document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").checked && document.getElementById("popup_question_field-{{ forLoopIndex }}-{{ forloop.index0 }}").value == '{{radAdditionalField[0]}}') {
            isRadioGetValue{{forLoopIndex}} = true;
          }
          {% else %}
          isRadioGetValue{{forLoopIndex}} = true;
          {% endif %}
          {% endif %}
        } else {
          isRadioGetValue{{forLoopIndex}} = false;
        }
      } else {
        isRadioGetValue{{forLoopIndex}} = false;
      }
      if (isClick) {
        onButtonDisabled();
        onErrorMessage();
      } else {
        if (!isRadioGetValue{{forLoopIndex}}) {
          document.querySelector('#popup-question__item-error-{{forLoopIndex}}').style.display = 'block';
        } else {
          document.querySelector('#popup-question__item-error-{{forLoopIndex}}').style.display = 'none';
        }
      }
      {% endfor %}
      {% endif %}

      if(document.getElementById("popup_question_field-radAddField-{{ forLoopIndex }}") && document.getElementById("popup_question_field-radAddField-{{ forLoopIndex }}").value != '' ){
        document.cookie = "{{ product.id }}_popupField{{ forLoopIndex }}-radAddField=popup_question_field-radAddField-{{ forLoopIndex }}---popInptVal---"+document.querySelector('#popup_question_field-radAddField-{{ forLoopIndex }}').value+"; max-age=86400";
      } else {
        document.cookie = "{{ product.id }}_popupField{{ forLoopIndex }}-radAddField=popup_question_field-radAddField-{{ forLoopIndex }}---popInptVal---empty; max-age=86400";
      }
    });
    {% endif %}
    //additional field end

    {% endif %}
    //end radio

    {% else %}
    document.querySelector('#popup_question_field-{{ forloop.index0 }}').addEventListener('input', (e) => {

      {% if product.metafields.accentuate.popup_question_text_for_wrong_answer[forloop.index0] != blank %}
      isTextGetValue{{ forloop.index0 }} = !!e.target.value;

      if (isClick) {
        onButtonDisabled();
        onErrorMessage();
      } else {
        if (!isTextGetValue{{forloop.index0}}) {
          document.querySelector('#popup-question__item-error-{{forloop.index0}}').style.display = 'block';
        } else {
          document.querySelector('#popup-question__item-error-{{forloop.index0}}').style.display = 'none';
        }
      }
      {% endif %}
      if(document.querySelector('#popup_question_field-{{ forloop.index0 }}') && document.querySelector('#popup_question_field-{{ forloop.index0 }}').value != '' ){
        document.cookie = "{{ product.id }}_popupField{{ forloop.index0 }}=popup_question_field-{{ forloop.index0 }}---popInptVal---"+document.querySelector('#popup_question_field-{{ forloop.index0 }}').value+"; max-age=86400";
      } else {
        document.cookie = "{{ product.id }}_popupField{{ forloop.index0 }}=popup_question_field-{{ forloop.index0 }}---popInptVal---empty; max-age=86400";
      }
    });

    {% endcase %}
    {% endfor %}
    {% endif %}

    let today = new Date();
    let dd = today.getDate();
    let mm = today.getMonth() + 1; //January is 0!
    let yyyy = today.getFullYear();

    if (dd < 10) {
      dd = "0" + dd;
    }
    if (mm < 10) {
      mm = "0" + mm;
    }

    let todayDate = dd + '-' + mm + '-' + yyyy;
    let majorityYearsPlus = yyyy - 18;

    let majorityDatePlus = dd + '-' + mm + '-' + majorityYearsPlus;

    let dateElement = document.querySelector('.popup-question__item-input-date');
    let datepicker = new Datepicker(dateElement, {
      container: '.popup-question__item-input-date-box',
      startView: '2:decades',
      format: 'dd-mm-yyyy',
      maxDate: majorityDatePlus,
      minDate: '01-01-1900',
      autohide: true
    });

  });

  /// Validate Fields ///

  document.addEventListener('DOMContentLoaded', function () {
    $('.modal-fields__button').click(function (e) {

      checkFieldWithoutWrongAnswer();
    });

    let buttonModalSendForm = document.querySelector('.modal-fields__button');
    let errorMessageFieldsForm = document.querySelector('.error-message-fields');
    let modalFieldsForm = document.querySelector('.modal-fields');
    let addTocartButton = document.getElementById('form-add-to-cart-button-id');
    let addTocartModalOpener = document.getElementById('add-to-cart-modal-opener');


    // add to cart button observer

    let addButtonObserver = new MutationObserver(function (mutations) {
      mutations.forEach(function (mutation) {

        if (mutation.attributeName === 'style') {

          addTocartButton.style.display = 'none';
          addTocartModalOpener.style.display = 'block';
        }
      });
    });

    addButtonObserver.observe(document.getElementById('form-add-to-cart-button-id'), {
      attributes: true,
      attributeFilter: ["style"]
    });

    function checkFieldWithoutWrongAnswer() {
      let isAllChecked = true;

      $('.question__item-without-wrong-answer').each(function () {
        if ($(this).find('.popup-question__item-input-radio-box').length > 0){  //check input is type radio
          if ($(this).find('.popup-question__item-input-radio:checked').length <= 0) {
            isAllChecked = false;
            $(this).find('.popup-question__item-error').show();
          } else {
            $(this).find('.popup-question__item-error').hide();
          }

          if ($(this).hasClass('additional-field-show')) {  // check if has additional field
            let additionlaField = $(this).find('.popup-question__item-input-radio-radAddField');
            if (additionlaField.val() === ''){
              isAllChecked = false;
              $(this).find('.popup-question__item-error').show();
              additionlaField.on('change', function (){
                checkFieldWithoutWrongAnswer();
              })
            }
          }
        } else if ($(this).find('.popup-question__item-input-text-box').length > 0) { //check input is type text

          if ($(this).find('.popup-question__item-input-text').val() === ''){
            isAllChecked = false;
            $(this).find('.popup-question__item-error').show();
            $(this).on('change', function (){
              checkFieldWithoutWrongAnswer();
            })
          } else {
            $(this).find('.popup-question__item-error').hide();
          }
        }

        // Without wrong answer handler
        $('.question__item-without-wrong-answer .popup-question__item-input-item').click(function () {
          setTimeout(function (){
            checkFieldWithoutWrongAnswer();
          },100)
        })
      })

      if(isAllChecked) {
        checkAllField();
      } else {
        submitForm(isAllChecked);
      }
    }

    function checkAllField() {
      let isAllChecked = true;

      $('.popup-question__item-input-radio-box').each(function () {
        if ($(this).find('.popup-question__item-input-radio:checked').length <= 0) {
          isAllChecked = false;
          $(this).find('.popup-question__item-error').show();
        } else {
          $(this).find('.popup-question__item-error').hide();
        }
      })

      $('.popup-question__item-input-text-box').each(function () {
        if ($(this).find('.popup-question__item-input-text').val() === ''){
          isAllChecked = false;
          $(this).find('.popup-question__item-error').show();
        } else {
          $(this).find('.popup-question__item-error').hide();
        }
      })

      if ($('.popup-question__item-input-date-box .popup-question__item-input-date').length === 1) {
        checkDateField(isAllChecked);
      } else {
        submitForm(isAllChecked);
      }
    }

    /// Date validate

    function checkDateField(isAllChecked) {
      let dateInput = $('.popup-question__item-input-date-box .popup-question__item-input-date');

      let today = new Date();
      let dd = today.getDate();
      let mm = today.getMonth() + 1; //January is 0!
      let yyyy = today.getFullYear();
      if (dd < 10) {
        dd = "0" + dd;
      }
      if (mm < 10) {
        mm = "0" + mm;
      }
      let majorityYears = yyyy - 18;
      let majorityDate = majorityYears + "-" + mm + "-" + dd;
      let dateInputValue = dateInput.val();
      let selectedDate = '';
      let selectedYear = '';

      if(dateInputValue !== '' && dateInputValue.includes('-') && !hasLetter(dateInputValue)) {
        let splitedDate = dateInputValue.split('-');

        if (splitedDate.length === 3){  /// if = 3 = mm-dd-yyyy
          if (splitedDate[2].length === 4) {
            selectedDate = splitedDate[2] + '-' + splitedDate[1] + '-' + splitedDate[0];
            selectedYear = parseInt(splitedDate[2]);
          } else {
            selectedDate = splitedDate[0] + '-' + splitedDate[1] + '-' + splitedDate[2];
            selectedYear = parseInt(splitedDate[0]);
          }
        }

        selectedDate = new Date(selectedDate);
        majorityDate = new Date(majorityDate);
      }

      if (isAllChecked){
        if (selectedDate !== '' && selectedYear >= 1900  && selectedDate <= majorityDate) {
          dateInput.parents('.popup-question__item-input-box').find('.popup-question__item-error').hide();
          isAllChecked = true;
        } else {
          isAllChecked = false;
          dateInput.parents('.popup-question__item-input-box').find('.popup-question__item-error').show();
        }
      }

      submitForm(isAllChecked);
    }

    // Submit form

    function submitForm(isAllChecked){
      if (isAllChecked) {
        addButtonObserver.disconnect();
        buttonModalSendForm.disabled = false;
        errorMessageFieldsForm.style.display = 'none';
        addTocartButton.style.display = 'block';
        addTocartModalOpener.style.display = 'none';

        setBackEndDateFormat();
      } else {
        modalFieldsForm.setAttribute('open', '');
        buttonModalSendForm.disabled = true;
        errorMessageFieldsForm.style.display = 'block';
        addTocartButton.style.display = 'none';
        addTocartModalOpener.style.display = 'block';
      }
    }

    /// Set format date which uses the backend
    function setBackEndDateFormat() {
      let dateInput = $('.popup-question__item-input-date-box .popup-question__item-input-date');
      let date = dateInput.val();
      if (date !== '') {
        let splitedDate = date.split('-');

        if (splitedDate[2].length === 4) {
          date = splitedDate[2] + '-' + splitedDate[1] + '-' + splitedDate[0];
          dateInput.val(date);
        }
      }
    }

    function hasLetter(str) {
      return str.match(/[a-z]/i) !== null;
    }

  })
</script>