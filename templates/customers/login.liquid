{{ 'customer.aio.min.css' | asset_url | stylesheet_tag }}

<div class="customer login">
  <h1 id="recover" class="customer__title" tabindex="-1">
    {{ 'customer.recover_password.title' | t }}
  </h1>
  <div>
    <p class="customer__subtitle">
      {{ 'customer.recover_password.subtext' | t }}
      <a class="customer__link" href="{{ routes.account_login_url }}" style="display:inline;font-size: 16px;margin: 0;">Log In</a>
    </p>

    {%- form 'recover_customer_password' -%}
      {% assign recover_success = form.posted_successfully? %}
      <div class="field">
        <div class="field__icon">
          {% render "icon-text" %}
        </div>
        <input type="email"
               class="customer__input"
          value=""
          name="email"
               required
          id="RecoverEmail"
          autocorrect="off"
          autocapitalize="off"
          autocomplete="email"
          {% if form.errors %}
            aria-invalid="true"
            aria-describedby="RecoverEmail-email-error"
            autofocus
          {% endif %}
          placeholder="{{ 'customer.login_page.email' | t }}"
        >
        <label for="RecoverEmail">
          {{ 'customer.login_page.email' | t }}
        </label>
      </div>
      {%- if form.errors -%}
        <small id="RecoverEmail-email-error" class="form__message">
          <svg aria-hidden="true" focusable="false" role="presentation" viewBox="0 0 13 13">
            <circle cx="6.5" cy="6.50049" r="5.5" stroke="white" stroke-width="2"/>
            <circle cx="6.5" cy="6.5" r="5.5" fill="#EB001B" stroke="#EB001B" stroke-width="0.7"/>
            <path d="M5.87413 3.52832L5.97439 7.57216H7.02713L7.12739 3.52832H5.87413ZM6.50076 9.66091C6.88091 9.66091 7.18169 9.37267 7.18169 9.00504C7.18169 8.63742 6.88091 8.34917 6.50076 8.34917C6.12061 8.34917 5.81982 8.63742 5.81982 9.00504C5.81982 9.37267 6.12061 9.66091 6.50076 9.66091Z" fill="white"/>
            <path d="M5.87413 3.17832H5.51535L5.52424 3.537L5.6245 7.58083L5.63296 7.92216H5.97439H7.02713H7.36856L7.37702 7.58083L7.47728 3.537L7.48617 3.17832H7.12739H5.87413ZM6.50076 10.0109C7.06121 10.0109 7.5317 9.57872 7.5317 9.00504C7.5317 8.43137 7.06121 7.99918 6.50076 7.99918C5.94031 7.99918 5.46982 8.43137 5.46982 9.00504C5.46982 9.57872 5.94031 10.0109 6.50076 10.0109Z" fill="white" stroke="#EB001B" stroke-width="0.7">
          </svg>
          {{ form.errors.messages['form'] }}
        </small>
      {%- endif -%}

      <button class="customer__reset">
        {{ 'customer.login_page.submit' | t }}
      </button>

      {% comment %}<a href="#login">{% endcomment %}
        {% comment %}{{ 'customer.login_page.cancel' | t }}{% endcomment %}
      {% comment %}</a>{% endcomment %}
    {%- endform -%}
  </div>

  <h1 id="login" class="customer__title" tabindex="-1">
    {{ 'customer.login_page.title' | t }}
  </h1>
  <p id="login" class="customer__subtitle" tabindex="-1">
    {{ 'customer.login_page.subtitle' | t }}
  </p>
  <p id="login" class="customer__subtitle" style="font-size: 16px;" tabindex="-1">
    Don't have account with us? Click here to <a class="customer__link" id="registerBtn" style="display: inline;" href="/account/register"> sign up</a>
  </p>

  <div id="login">
    {%- if recover_success == true -%}
      <h3 class="form__message" tabindex="-1" autofocus>
        <svg aria-hidden="true" focusable="false" role="presentation" viewBox="0 0 13 13">
          <path d="M6.5 12.35C9.73087 12.35 12.35 9.73086 12.35 6.5C12.35 3.26913 9.73087 0.65 6.5 0.65C3.26913 0.65 0.65 3.26913 0.65 6.5C0.65 9.73086 3.26913 12.35 6.5 12.35Z" fill="#428445" stroke="white" stroke-width="0.7"/>
          <path d="M5.53271 8.66357L9.25213 4.68197" stroke="white"/>
          <path d="M4.10645 6.7688L6.13766 8.62553" stroke="white">
        </svg>
        {{ 'customer.recover_password.success' | t }}
      </h3>
    {%- endif -%}
    {%- form 'customer_login' -%}
      {%- if form.errors -%}
        <h2 class="form__message" tabindex="-1" autofocus>
          <span class="visually-hidden">{{ 'accessibility.error' | t }} </span>
          <svg aria-hidden="true" focusable="false" role="presentation" viewBox="0 0 13 13">
            <circle cx="6.5" cy="6.50049" r="5.5" stroke="white" stroke-width="2"/>
            <circle cx="6.5" cy="6.5" r="5.5" fill="#EB001B" stroke="#EB001B" stroke-width="0.7"/>
            <path d="M5.87413 3.52832L5.97439 7.57216H7.02713L7.12739 3.52832H5.87413ZM6.50076 9.66091C6.88091 9.66091 7.18169 9.37267 7.18169 9.00504C7.18169 8.63742 6.88091 8.34917 6.50076 8.34917C6.12061 8.34917 5.81982 8.63742 5.81982 9.00504C5.81982 9.37267 6.12061 9.66091 6.50076 9.66091Z" fill="white"/>
            <path d="M5.87413 3.17832H5.51535L5.52424 3.537L5.6245 7.58083L5.63296 7.92216H5.97439H7.02713H7.36856L7.37702 7.58083L7.47728 3.537L7.48617 3.17832H7.12739H5.87413ZM6.50076 10.0109C7.06121 10.0109 7.5317 9.57872 7.5317 9.00504C7.5317 8.43137 7.06121 7.99918 6.50076 7.99918C5.94031 7.99918 5.46982 8.43137 5.46982 9.00504C5.46982 9.57872 5.94031 10.0109 6.50076 10.0109Z" fill="white" stroke="#EB001B" stroke-width="0.7">
          </svg>
          {{ 'templates.contact.form.error_heading' | t }}
        </h2>
        {{ form.errors | default_errors }}
      {%- endif -%}

          {%- capture contentForQuerystring -%}{{ content_for_header }}{%- endcapture -%}
          {%- assign pageUrl = contentForQuerystring | split:'"pageurl":"' | last | split:'"' | first | split:'.myshopify.com' | last |
            replace:'\/','/' |
            replace:'%20',' ' |
            replace:'\u0026','&'
          -%}
          {%- assign split1 = pageUrl | split: "/" -%}
          {%- assign split2 = split1[3] | split: "?" -%}
          {%- assign product_handle = split2[0] -%}

          {%- if product_handle -%}
      		<input type="hidden" name="return_to" value="/products/{{ product_handle }}">
          {%- endif -%}

      <div class="field">
        <div class="field__icon">
          {% render "icon-text" %}
        </div>
        <input
          type="email"
          required
          class="customer__input"
          name="customer[email]"
          id="CustomerEmail"
          autocomplete="email"
          autocorrect="off"
          autocapitalize="off"
          {% if form.errors contains 'form' %}
            aria-invalid="true"
          {% endif %}
          placeholder="{{ 'customer.login_page.email' | t }}"
        >
        <label for="CustomerEmail">
          {{ 'customer.login_page.email' | t }}
        </label>
      </div>

      {%- if form.password_needed -%}
        <div class="field">
          <div class="field__icon">
            {% render "icon-lock" %}
          </div>
          <input
            type="password"
            required
            class="customer__input"
            value=""
            name="customer[password]"
            id="CustomerPassword"
            autocomplete="current-password"
            {% if form.errors contains 'form' %}
              aria-invalid="true"
            {% endif %}
            placeholder="{{ 'customer.login_page.password' | t }}"
          >
          <label for="CustomerPassword">
            {{ 'customer.login_page.password' | t }}
          </label>
        </div>

        <div class="error-message">Fill in all the fields</div>
        <div class="error-message error-message-email">Please enter a valid email address</div>

        <div class="customer__bottom">
          <label class="customer__remember">
            <input type="checkbox" checked disabled>
            <span class="customer__checkbox"></span>
            <span class="customer__remember-text">{{ 'customer.login_page.remember' | t }}</span>
          </label>
          <a class="customer__link" href="#recover">
            {{ 'customer.login_page.forgot_password' | t }}
          </a>
        </div>
      {%- endif -%}

      <input type="hidden" name="checkout_url" value="">

      <button class="customer-button">Log in</button>

      {% comment %}
      <a href="{{ routes.account_register_url }}">
        {{ 'customer.login_page.create_account' | t }}
      </a>
      {% endcomment %}

    {%- endform -%}
  </div>

  {%- if shop.checkout.guest_login -%}
    <div>
      <hr>
      <h2>{{ 'customer.login_page.guest_title' | t }}</h2>

      {%- form 'guest_login' -%}
        <button>
          {{ 'customer.login_page.guest_continue' | t }}
        </button>
      {%- endform -%}
    </div>
  {%- endif -%}
</div>
<script>
  localStorage.removeItem('registerError');
  const splittedUrl = window.location.pathname.split('/');
  if (splittedUrl.length === 4) {
    localStorage.setItem('redirect_to', "/products/" + splittedUrl[3]);
  }
  const getQueryParams = (query) => {
        let params = {};
        new URLSearchParams(query).forEach((value, key) => {
        let decodedKey = decodeURIComponent(key);
        let decodedValue = decodeURIComponent(value);
        // This key is part of an array
        if (decodedKey.endsWith("[]")) {
        decodedKey = decodedKey.replace("[]", "");
        params[decodedKey] || (params[decodedKey] = []);
        params[decodedKey].push(decodedValue);
        // Just a regular parameter
        } else {
        params[decodedKey] = decodedValue;
        }
        });

        return params;
    };

  let obj = getQueryParams(window.location.search);
  let newObj = {};

  for (const i in obj) {
    let a = i.match(/([^\[\]]+)(\[[^\[\]]+[^\]])*?/g),
    p = obj[i];
    j = a.length;

    while (j--) {
    q = {};
    q[a[j]] = p;
    p = q;
    }
    // merge object
    let k = Object.keys(p)[0],
    o = newObj;

    while (k in o) {
    p = p[k];
    o = o[k];
    k = Object.keys(p)[0];
    }

    o[k] = p[k];
  }

  if(newObj.continueStatId){
    let continueStatId = newObj.continueStatId;
    let quizId = newObj.quizId || newObj.id;

    let checkoutUrl = document.getElementsByName('checkout_url')[0];
    let url = '/pages/consultation?continueStatId='+continueStatId+'&id='+quizId;
    localStorage.setItem('redirect_to', url);

    let registerBtn = document.getElementById('registerBtn');
    let registerUrl = '/account/register?continueStatId='+continueStatId+'&quizId='+quizId;

    checkoutUrl.setAttribute('value', url);
    registerBtn.setAttribute('href', registerUrl);
  }

   window.addEventListener('DOMContentLoaded', function() {
    const inputEmail = document.querySelector('#CustomerEmail');
    const inputPassword = document.querySelector('#CustomerPassword');
    const buttonFormSend = document.querySelector('.customer-button');
    const errorMessage = document.querySelector('.error-message');
    const errorMessageEmail = document.querySelector('.error-message-email');

    const EMAIL_REGEXP = /^(([^<>()[\].,;:\s@"]+(\.[^<>()[\].,;:\s@"]+)*)|(".+"))@(([^<>()[\].,;:\s@"]+\.)+[^<>()[\].,;:\s@"]{2,})$/iu;

    let isInputEmail = !!inputEmail.value;
    let isInputEmailValid = !!EMAIL_REGEXP.test(inputEmail.value);
    let isInputPassword = !!inputPassword.value;
    let isClick = false;

    const onButtonDisabled = () => {
      if (isInputEmail && isInputPassword && isInputEmailValid) {
        buttonFormSend.disabled = false;
      } else {
        buttonFormSend.disabled = true;
      };
    };

    const onErrorMessage = () => {
      if (isInputEmail && isInputPassword) {
        errorMessage.style.display = 'none';
      } else {
        errorMessage.style.display = 'block';
      };

      if (!isInputEmail || !isInputPassword) {
        errorMessageEmail.style.display = 'none';
      } else if (!isInputEmailValid) {
        errorMessageEmail.style.display = 'block';
      } else if (isInputEmailValid) {
        errorMessageEmail.style.display = 'none';
      };

      if (!isInputEmail || !isInputEmailValid) {
        inputEmail.style.border = '2px solid #ff0000';
      } else {
        inputEmail.style.border = 'none';
      };

      if (!isInputPassword) {
        inputPassword.style.border = '2px solid #ff0000';
      } else {
        inputPassword.style.border = 'none';
      };
    };

    buttonFormSend.addEventListener('click', () => {
      isClick = true;
      onButtonDisabled();
      onErrorMessage();
    });

    inputEmail.addEventListener('input', (e) => {
      isInputEmailValid = !!EMAIL_REGEXP.test(e.target.value);
      isInputEmail = !!e.target.value;

      if (isClick) {
        onErrorMessage();
        onButtonDisabled();
      };
    });

    inputPassword.addEventListener('input', (e) => {
      isInputPassword = !!e.target.value;

      if (isClick) {
        onErrorMessage();
        onButtonDisabled();
      };
    });
  });
</script>
