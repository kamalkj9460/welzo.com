{{ 'list-blogs-section.aio.min.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    margin-top: {{ section.settings.margin-top }}px;
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<div class="list-blogs" id="All-articles">
  <div class="list-blogs__content page-width section-{{ section.id }}-padding isolate">
    <h2 class="main-title list-blogs__title">
        {{ section.settings.title }}
    </h2>

    <div class="list-blogs__tabs-wrapper">
      <div class="list-blogs__slider">
        <div class="swiper-wrapper list-blogs__tabs-list">
          {% for link in section.settings.blog-menu.links %}
          {%- if forloop.index == 1 -%}
            {%- assign classNames = "unselectable swiper-slide list-blogs__tab-item list-blogs__tab-item--active" -%}
          {%- else -%}
            {%- assign classNames = "unselectable swiper-slide list-blogs__tab-item" -%}
          {%- endif -%}
            {% assign blog = link.object %}
              <div class="{{ classNames }}" data-index="{{forloop.index}}">
                {{ blog.title }}
              </div>
          {% endfor %}    
        </div>
      </div>
      <div class="list-blogs__tabs-content">
        {% for link in section.settings.blog-menu.links %}
        {%- if forloop.index == 1 -%}
          {%- assign classNames = "list-blogs__tab list-blogs__tab--active" -%}
        {%- else -%}
          {%- assign classNames = "list-blogs__tab" -%}
        {%- endif -%}
          {% assign blog = link.object %}
          <div class="{{ classNames }}" data-index="{{forloop.index}}">
            {%- assign count = blog.articles | size -%}
            {%- if count > 0 -%}
              {%- for article in blog.articles -%}
                {% render 'article', article: article, url: article.url, blog_title: blog.title %}
              {%- endfor -%}
            {%- else -%}
                <strong><em>No articles</em></strong>
            {%- endif -%}
          </div>
        {% endfor %}
      </div>
    </div>
  </div>
</div>


<script type="lazyload_int">
  const swiperBlogsTab = new Swiper(".list-blogs__slider", {
    slidesPerView: "auto",
    spaceBetween: 30,
  });

  $(".list-blogs__tab-item").on("click", function() {
    $(".list-blogs__tab-item").removeClass("list-blogs__tab-item--active");
    $(this).addClass("list-blogs__tab-item--active");
    const currentIndex = this.dataset.index;
    $(".list-blogs__tab").each(function(index) {
      if(index + 1 == currentIndex) {
        $(this).addClass('list-blogs__tab--active');
      } else {
        $(this).removeClass('list-blogs__tab--active');
      }
    })
  });
</script>

{% schema %}
{
  "name": "t:sections.list-blogs.name",
  "class": "section",
  "tag": "section",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "t:sections.list-blogs.settings.title.label"
    },
    {
      "type": "link_list",
      "id": "blog-menu",
      "label": "t:sections.list-blogs.settings.blog-menu.label"
    },
    {
      "type": "range",
      "id": "margin-top",
      "min": -150,
      "max": 150,
      "step": 5,
      "unit": "px",
      "label": "t:sections.list-blogs.settings.margin-top.label",
      "default": -150
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "presets": [
    {
      "name": "t:sections.list-blogs.name"
    }
  ]
}
{% endschema %}
